volumes:
    postgres-volume:
    redis-volume:

networks:
    test-task-wallet-net:
        name: "test-task-wallet-net"
        driver: bridge

services:

    db:
        image: postgres:${POSTGRES_VERSION}
        container_name: "test-task-wallet-database"
        env_file:
            - config.env
        networks:
            - test-task-wallet-net
        ports:
            - ${POSTGRES_PORT}:5432
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
            interval: 1s
            timeout: 60s
            retries: 60
        restart: always
        volumes:
            - postgres-volume:/var/lib/postgresql/data


    redis:
        image: redis:${REDIS_VERSION}
        container_name: "test-task-wallet-redis"
        networks:
            - test-task-wallet-net
        ports:
            - ${REDIS_PORT}:6379
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 5s
            timeout: 5s
            retries: 5
        restart: always
        volumes:
            - redis-volume:/data


    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: "test-task-wallet-app"
        env_file:
            - config.env
        environment:
            POSTGRES_HOST: db
            REDIS_HOST: redis
            POSTGRES_PORT: 5432
            REDIS_PORT: 6379
        ports:
            - ${SERVER_PORT_HTTP}:${SERVER_PORT_HTTP}
        networks:
            - test-task-wallet-net
        restart: always
        depends_on:
            - db
            - redis